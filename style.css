/**********************************************
*** GENERAL
**********************************************/
.final-score{
  position:absolute;
  left:50%;
  transform:translate(-50%);
  top:520px;
  color:#555;
  font-size:18px;
  font-family:'Lato';
  text-align:center;
  padding:10px;
  width:160px;
  text-transform:uppercase;

}

.final-score:focus { outline:none; }
/*↑
これをしていすることで
Finalscoreの青い枠線の表示が消える
*/
#dice-1 { top: 120px; }
#dice-2 { top: 250px; }


* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.clearfix::after {
    content: "";
    display: table;
    clear: both;
}

body {
    background-image: linear-gradient(rgba(62, 20, 20, 0.4), rgba(62, 20, 20, 0.4)), url(back.jpg);
    /*
    background-image: lineat-gradient(ここに色指定) 直線
                      radial-gradien(ここに色指定) 丸
    ✅CSSのlinear-gradientの書き方
    1,background-lineargradient(開始位置,開始色、終了色)
    ☞上からならtop
    ☞下からならbottom
    2,色が変わる位置を変える
    ☞色コード尾横に半角スペースで区切って位置を%指定します
    3,[応用編]色の変化を3色以上にする
    ☞単純にカンマと色指定を書き足します,また色の指定に加えて[%]で一も指定します
    4,四色にする例例として
    ☞background-image: linear-gradient(to bottom, #fff,#FFC778 30%,#F89174 60%,#7481f8)
    ☞方向は上から下にします
    5,斜めにグラデーションをかける
    ☞方法2つある
    5-1,開始位置を左上や右上にする(#ベンダープレッィクス付きの場合)
    ☞background-image:linear-gradient(top left,#fff,#ffc778);
    ☞グラデーションの開始位置を指定するので top leftになる　　*ただしこの方法で指定できるのは45渡のグラデーションだけです
    5-2,角度を指定する
    ☞ベンダープレックス付きの指定は省きます
    ☞deg(degreeのdeg)を書いていく　このときto bottomなどの方向は書きません
    ☞degはどうやって決めるの 0degから値が大きくなるほど時計回り
    */
    /*
    オーバーレイ(写真にグラデーションを重ねる)
  　グラデーションオーバレイの方法は簡単で、
    gradient()の後にカンマ区切りで　url(画像のパス)
    を指定します
    背景画像が見えるようにグラデーションは半透明なものを指定しましょう
    point
    ☞background-size:coverを指定すると、要素全体に背景画像がぴったりはまるようになります
    */
    background-size: cover;
    /*
    ↑これを使うことで要素全体に画像がきちんと入る
    */
    background-position: center;
    font-family: Lato;
    font-weight: 300;
    position: relative;
    height: 100vh;
    color: #555;
}

.wrapper {
    width: 1000px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #fff;
    box-shadow: 0px 10px 50px rgba(0, 0, 0, 0.3);
    overflow: hidden;
}

.player-0-panel,
.player-1-panel {
    width: 50%;
    float: left;
    height: 600px;
    padding: 100px;
}



/**********************************************
*** PLAYERS
**********************************************/

.player-name {
    font-size: 40px;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 2px;
    font-weight: 100;
    margin-top: 20px;
    margin-bottom: 10px;
    position: relative;
}

.player-score {
    text-align: center;
    font-size: 80px;
    font-weight: 100;
    color: #EB4D4D;
    margin-bottom: 130px;
}

.active { background-color: #f7f7f7; }
.active .player-name { font-weight: 300; }

.active .player-name::after {
    content: "\2022";
    /*
    エスケープ記法
    よくわかんない
    */
    font-size: 47px;
    position: absolute;
    color: #EB4D4D;
    top: -7px;
    right: 10px;

}

.player-current-box {
    background-color: #EB4D4D;
    color: #fff;
    width: 40%;
    margin: 0 auto;
    padding: 12px;
    text-align: center;
}

.player-current-label {
    text-transform: uppercase;
    /*
    text-transform:表示スタイルをnoneにしたので☞初期値
    text-transform:capitalize;　単語の先頭文字を大文字で表示します
    text-decoration:lowercase; スヴぇ手を小文字で表示します
    uppercase;スべてくぉ太文字で表示します
    */
    margin-bottom: 10px;
    font-size: 12px;
    color: #222;
}

.player-current-score {
    font-size: 30px;
}

button {
    position: absolute;
    width: 200px;
    left: 50%;
    transform: translateX(-50%);
    color: #555;
    background: none;
    border: none;
    font-family: Lato;
    font-size: 20px;
    text-transform: uppercase;
    cursor: pointer;
    font-weight: 300;
    transition: background-color 0.3s, color 0.3s;
}

button:hover { font-weight: 600; }
button:hover i { margin-right: 20px; }

button:focus {
    outline: none;
    /*
    online-style:スタイル;
    outline-styleプロパティはボーダーの外側に
    アウトラインを描画します。
    ボタンや入力フィールド、イメージマップなどを目立たせたいときに利用します

    outlineの用語リスト☟☟☟
    dotted:点線で表示します
    dashed:破線で表示します
    solid:一本の実線で表示されます
    double:2本の実線で表示されます
    groove:立体的にくぼんだ線で表示します
    inset:アウトラインの内部が立体的にくぼんだように表示されます
    outset:アウトラインの内部が立体的に隆起したように表示されます
    */
}

i {
    color: #EB4D4D;
    display: inline-block;
    margin-right: 15px;
    font-size: 32px;
    line-height: 1;
    vertical-align: text-top;
    /*
    ↑vertical-alignとはなんだ
    行内のテキスト、画像の垂直方向のそろえ位置を指定するプロパティ
    #適用できるのが[inline要素]と[テーブルセルタグです]
    なので[divタグ]などの[ブロック要素]に対して指定しても効果がない

    baseline　
    ☞適当した要素のベースラインを親要素のベースラインに合わせる(初期値)
    top (ボックスの上端)
    ☞適用した要素の上端を行ボックスの上端に合わせる
    middle
    ☞要素の友進を親要素の中心にそろえる
    text-top (テキストの中の上端)
    ☞適用した要素の上端を親要素の文字の上端委合わせる
    (テーブルセルへの指定はできない)
    text-bottom　
    ☞適用した要素の上端を親要素の文字の下端に合わせる
    super
    ☞上付き文字
    sub
    ☞下付き文字


    */
    margin-top: -4px;
    transition: margin 0.3s;
}

.btn-new { top: 45px;}
.btn-roll { top: 403px;}
.btn-hold { top: 467px;}

.dice {
    position: absolute;
    left: 50%;
    top: 178px;
    transform: translateX(-50%);
    height: 100px;
    box-shadow: 0px 10px 60px rgba(0, 0, 0, 0.10);
}

.winner { background-color: #f7f7f7; }
.winner .player-name { font-weight: 300; color: #EB4D4D; }
